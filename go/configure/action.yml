name: "go-configure"
description: "Set up Go environment for CI build. Sets up Buf if the relevant inputs are provided."

inputs:
  FLIPPCIRCLECIPULLER_REPO_TOKEN:
    description: Flipp circleci repo token
    required: true
  USE_ASDF:
    description: Use asdf for version management
    required: false
    default: false
    type: boolean
  USE_ASDF_PLUGIN_MANAGER:
    description: Use asdf plugin manager for plugin management
    required: false
    default: false
    type: boolean
  BUF_BUILD_USER:
    description: Buf CI user stored as secret
    required: false
  BUF_BUILD_API_TOKEN:
    description: Buf API token stored as secret
    required: false
  FETCH_DEPTH:
    description: Fetch depth for git checkout
    required: false
    default: 1

runs:
  using: "composite"
  steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: ${{ inputs.FETCH_DEPTH }}
    - name: Setting up private modules access
      shell: bash
      run: git config --global url."https://${{ inputs.FLIPPCIRCLECIPULLER_REPO_TOKEN }}:x-oauth-basic@github.com/wishabi".insteadOf "https://github.com/wishabi"
    - name: Setting up buf
      uses: bufbuild/buf-setup-action@v1
      if: "${{ inputs.BUF_BUILD_API_TOKEN != '' && inputs.USE_ASDF == 'false' }}"
      with:
        github_token: ${{ inputs.FLIPPCIRCLECIPULLER_REPO_TOKEN }}
        buf_user: ${{ inputs.BUF_BUILD_USER }}
        buf_api_token: ${{ inputs.BUF_BUILD_API_TOKEN }}
    - name: Install mockery
      if: ${{ hashFiles('.mockery.yml') != '' && inputs.USE_ASDF == 'false' }}
      run: go install github.com/vektra/mockery/v2
      shell: bash
    - name: Install asdf tools
      if: ${{ inputs.USE_ASDF == 'true' }}
      uses: asdf-vm/actions/setup@v3.0.2
    - name: Install asdf plugin manager
      if: ${{ inputs.USE_ASDF_PLUGIN_MANAGER == 'true' }}
      run: |
        set -e
        asdf plugin add asdf-plugin-manager https://github.com/asdf-community/asdf-plugin-manager.git
        asdf install asdf-plugin-manager
        asdf-plugin-manager add-all
      shell: bash
    - name: Install asdf plugins
      if: ${{ inputs.USE_ASDF == 'true' }}
      run: asdf install
      shell: bash
    - name: Login Buf
      if: "${{ inputs.BUF_BUILD_API_TOKEN != '' && inputs.USE_ASDF == 'true' }}"
      run: buf registry login --username ${{ inputs.BUF_BUILD_USER }} --token-stdin <<< ${{ inputs.BUF_BUILD_API_TOKEN }}
      shell: bash
