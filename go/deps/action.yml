name: 'go-deps'
description: 'Install dependencies. Optionally runs "buf build" steps when BUF_REPO_NAME is provided'

inputs:
  # Deprecated, leaving for backwards compatibility
  BUF_REPO_NAME:
    description: DEPRECATED
    required: false
  FLIPPCIRCLECIPULLER_REPO_TOKEN:
    description: Flipp circleci repo token
    required: true
  MOCKERY_INSTALL_VERSION:
    description: The version of mockery to use
    required: false
    default: ""

runs:
  using: 'composite'
  steps:
    - name: Restoring vendor modules from cache
      id: vendor-cache
      uses: actions/cache@v4
      with:
        path: vendor
        key: vendor-cache-${{ hashFiles('go.mod','go.sum') }}
        restore-keys: vendor-cache-${{ hashFiles('go.mod','go.sum') }}
    - name: Generating protobuf code
      if: ${{ hashFiles('buf.gen.yaml') != '' }}
      run: buf generate
      shell: bash
    - name: Setting up private modules access
      if: steps.vendor-cache.outputs.cache-hit != 'true'
      shell: bash
      run: |
        set -e
        # Check that go.mod and go.sum are up to date
        go mod tidy
        git diff --exit-code -- go.mod go.sum
        go mod vendor
    - name: Run go generate
      run: go generate ./...
      shell: bash
    - name: Grab mockery version
      run: |
        # Default to empty version and v1 config
        MOCKERY_INSTALL_VERSION=""
  
        # Check for MOCKERY_INSTALL_VERSION input
        if [ -n "${{ inputs.MOCKERY_INSTALL_VERSION }}" ]; then
          MOCKERY_INSTALL_VERSION="${{ inputs.MOCKERY_INSTALL_VERSION }}"
          echo "Using MOCKERY_INSTALL_VERSION=${MOCKERY_INSTALL_VERSION} from input"
        fi

        # Check .tool-versions for mockery version
        if [ -z "$MOCKERY_INSTALL_VERSION" ] && [ -f ".tool-versions" ] && [ -s ".tool-versions" ]; then
          MOCKERY_INSTALL_VERSION=$(awk '/^mockery[[:space:]]+/ {print "v"$2}' .tool-versions)
          echo "Using MOCKERY_INSTALL_VERSION=${MOCKERY_INSTALL_VERSION} from .tool-versions"
        fi

        # Grab the major version from the full version
        MOCKERY_INSTALL_MAJOR_VERSION=""
        if [ -n "$MOCKERY_INSTALL_VERSION" ]; then
          temp_version=${MOCKERY_INSTALL_VERSION#v}
          MOCKERY_INSTALL_MAJOR_VERSION=${temp_version%%.*}
          echo "Extracted MOCKERY_INSTALL_MAJOR_VERSION=${MOCKERY_INSTALL_MAJOR_VERSION}"
        fi

        echo "MOCKERY_INSTALL_MAJOR_VERSION=${MOCKERY_INSTALL_MAJOR_VERSION}" >> $GITHUB_ENV
        echo "MOCKERY_INSTALL_VERSION=${MOCKERY_INSTALL_VERSION}" >> $GITHUB_ENV
      shell: bash
    - name: Install mockery
      if: ${{ hashFiles('.mockery.yml') != '' }}
      run: |
        if [ -n "${{ env.MOCKERY_INSTALL_VERSION }}" ]; then
          go install github.com/vektra/mockery/v${{ env.MOCKERY_INSTALL_MAJOR_VERSION }}@${{ env.MOCKERY_INSTALL_VERSION }}
        else
          go install github.com/vektra/mockery/v2@latest
        fi
      shell: bash
    - name: Generate mocks
      if: ${{ hashFiles('.mockery.yml') != '' }}
      run: mockery
      shell: bash
    - name: Caching workspace for deploy jobs
      uses: wishabi/github-actions/cache@v0
