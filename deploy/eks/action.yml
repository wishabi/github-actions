name: 'eks-deploy'
description: 'Custom GitHub action that deploys the repository to EKS using its "/deploy/build.sh" script'

inputs:
  ENV:
    description: Application environment (staging or production)
    required: true
  TIMEOUT:
    description: Timeout in minutes (e.g. '5m') for the deployment step
    required: false
  AWS_ACCESS_KEY_ID:
    description: AWS access key id stored as secret
    required: true
  AWS_SECRET_ACCESS_KEY:
    description: AWS secret access key stored as secret
    required: true
  AWS_REGION:
    description: AWS region to deploy to stored as secret
    required: true
  SLACK_SUCCESS_CHANNEL_ID:
    description: The Slack channel ID(s) to send successful deployment notifications
    required: false
  SLACK_FAILURE_CHANNEL_ID:
    description: The Slack channel ID(s) to send failed deployment notifications
    required: false
  SLACK_BOT_TOKEN:
    description: The Slack bot token to pass the data to
    required: false

runs:
  using: 'composite'
  steps:
    - name: Set branch variable
      id: set-branch
      shell: bash
      run: |
        if [ "${{ github.event_name }}" == "pull_request" ]; then
          branch="${{ github.event.pull_request.head.ref }}"
        else
          branch="${{ github.ref }}"
          branch="${branch#refs/heads/}"
        fi
        echo "branch=${branch}" >> $GITHUB_OUTPUT
    - name: Get short sha
      id: get-short-sha
      run: echo "short_sha=`echo ${GITHUB_SHA::7}`" >> $GITHUB_OUTPUT
      shell: bash
    - name: Configuring AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ inputs.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ inputs.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ inputs.AWS_REGION }}
    - uses: actions/checkout@v3
    - name: Cleaning workspace
      shell: bash
      run: shopt -s dotglob && rm -rf "${{ github.workspace }}"/*
    - name: Restoring workspace from cache
      uses: wishabi/github-actions/cache@v0
    - name: Deploying to EKS via Helm release
      shell: bash
      run: |
        cmd="chmod +x ./deploy/build.sh && ./deploy/build.sh service deploy_eks --env=${{ inputs.ENV }}"

        # Check if timeout is set and provide it as a flag
        if [ -n "${{ inputs.TIMEOUT }}" ]; then
          cmd="${cmd} --timeout=${{ inputs.TIMEOUT }}"
        fi

        # Execute command
        eval $cmd
    - name: Notify slack channel on success
      if: success() && inputs.SLACK_SUCCESS_CHANNEL_ID != null
      uses: slackapi/slack-github-action@v1.24.0
      env:
        SLACK_BOT_TOKEN: ${{ inputs.SLACK_BOT_TOKEN }}
      with:
        channel-id: ${{ inputs.SLACK_SUCCESS_CHANNEL_ID }}
        payload: |
          {
            "text": "EKS Deplloyment Succeeded",
            "blocks": [
              {
                "type": "header",
                "text": {
                  "type": "plain_text",
                  "text": "EKS Deployment Succeeded",
                  "emoji": true
                }
              },
              {
                "type": "divider"
              },
              {
                "type": "section",
                "text": {
                  "type": "mrkdwn",
                  "text": "*Repository*\n<https://github.com/${{ github.repository }}|${{ github.repository }}>\n\n*Environment*\n${{ inputs.ENV }}"
                },
                "accessory": {
                  "type": "image",
                  "image_url": "https://emoji.slack-edge.com/T02AJQYGN/shipped/43553cbf473da4d5.png",
                  "alt_text": "deploy fail icon"
                }
              },
              {
                "type": "divider"
              },
              {
                "type": "section",
                "fields": [
                  {
                    "type": "mrkdwn",
                    "text": "*Branch*"
                  },
                  {
                    "type": "mrkdwn",
                    "text": "*Commit*"
                  },
                  {
                    "type": "mrkdwn",
                    "text": "${{ format('<https://github.com/{0}/commit/{1}|{2}>', github.repository, github.sha, steps.set-branch.outputs.branch)}}"
                  },
                  {
                    "type": "mrkdwn",
                    "text": "${{ steps.get-short-sha.outputs.short_sha }}"
                  }
                ]
              },
              {
                "type": "section",
                "text": {
                  "type": "mrkdwn",
                  "text": "*Commit Message*\n${{ toJson(github.event.head_commit.message) }}"
                }
              },
              {
                "type": "context",
                "elements": [
                  {
                    "type": "mrkdwn",
                    "text": "*Triggered By:* ${{ github.triggering_actor }}"
                  }
                ]
              },
              {
                "type": "divider"
              }
            ]
          }
    - name: Notify slack channel on failure
      if: failure() && inputs.SLACK_FAILURE_CHANNEL_ID != null
      uses: slackapi/slack-github-action@v1.24.0
      env:
        SLACK_BOT_TOKEN: ${{ inputs.SLACK_BOT_TOKEN }}
      with:
        channel-id: ${{ inputs.SLACK_FAILURE_CHANNEL_ID }}
        payload: |
          {
            "text": "EKS Deployment Failed",
            "blocks": [
              {
                "type": "header",
                "text": {
                  "type": "plain_text",
                  "text": "EKS Deployment Failed",
                  "emoji": true
                }
              },
              {
                "type": "divider"
              },
              {
                "type": "section",
                "text": {
                  "type": "mrkdwn",
                  "text": "*Repository*\n<https://github.com/${{ github.repository }}|${{ github.repository }}>\n\n*Environment*\n${{ inputs.ENV }}"
                },
                "accessory": {
                  "type": "image",
                  "image_url": "https://emoji.slack-edge.com/T02AJQYGN/sad-cloud/d78efc194125ff42.png",
                  "alt_text": "deploy fail icon"
                }
              },
              {
                "type": "divider"
              },
              {
                "type": "section",
                "fields": [
                  {
                    "type": "mrkdwn",
                    "text": "*Branch*"
                  },
                  {
                    "type": "mrkdwn",
                    "text": "*Commit*"
                  },
                  {
                    "type": "mrkdwn",
                    "text": "${{ format('<https://github.com/{0}/commit/{1}|{2}>', github.repository, github.sha, steps.set-branch.outputs.branch)}}"
                  },
                  {
                    "type": "mrkdwn",
                    "text": "${{ steps.get-short-sha.outputs.short_sha }}"
                  }
                ]
              },
              {
                "type": "section",
                "text": {
                  "type": "mrkdwn",
                  "text": "*Commit Message*\n${{ toJson(github.event.head_commit.message) }}"
                }
              },
              {
                "type": "context",
                "elements": [
                  {
                    "type": "mrkdwn",
                    "text": "*Triggered By:* ${{ github.triggering_actor }}"
                  }
                ]
              },
              {
                "type": "divider"
              }
            ]
          }
