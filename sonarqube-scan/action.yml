name: "SonarQube Scan"
description: "Runs various quality and security checks against changes"
inputs:
  SONAR_HOST_URL:
    description: secret value
    required: true
  SONAR_TOKEN:
    description: secret value
    required: true
  CHECK_LINTER:
    description: whether to download and analyze linter results
    default: false
  SLACK_CHANNEL_ID:
    description: The Slack channel ID(s) to send the data to
    required: false
  SLACK_BOT_TOKEN:
    description: The Slack bot token to pass the data to
    required: false

runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Set branch variable
      id: set-branch
      shell: bash
      run: |
        if [ "${{ github.event_name }}" == "pull_request" ]; then
          branch="${{ github.event.pull_request.head.ref }}"
        else
          branch="${{ github.ref }}"
          branch="${branch#refs/heads/}"
        fi
        echo "branch=${branch}" >> $GITHUB_OUTPUT
    - name: Get short sha
      id: get-short-sha
      run: echo "short_sha=`echo ${GITHUB_SHA::7}`" > $GITHUB_OUTPUT
      shell: bash
    - name: Downloading test report
      uses: actions/download-artifact@v3
      with:
        name: "${{ github.sha }}-test-report.out"
    - name: Downloading coverage report
      uses: actions/download-artifact@v3
      with:
        name: "${{ github.sha }}-coverage.out"
    - name: Download linter results
      if: ${{ inputs.CHECK_LINTER == 'true' }}
      uses: actions/download-artifact@v3
      with:
        name: "${{ github.sha }}-lint-results.out"
    - name: SonarQube Scan
      uses: sonarsource/sonarqube-scan-action@master
      env:
        SONAR_TOKEN: ${{ inputs.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ inputs.SONAR_HOST_URL }}
      with:
        args: >
          -Dsonar.projectVersion=${{ steps.get-short-sha.outputs.short_sha }}
    - name: Notify slack channel on failure
      if: failure() && inputs.SLACK_CHANNEL_ID != null && github.ref == 'refs/heads/main'
      uses: slackapi/slack-github-action@v1.24.0
      env:
        SLACK_BOT_TOKEN: ${{ inputs.SLACK_BOT_TOKEN }}
      with:
        channel-id: ${{ inputs.SLACK_CHANNEL_ID }}
        payload: |
          {
            "text": "SonarQube Scan Failed",
            "blocks": [
              {
                "type": "header",
                "text": {
                  "type": "plain_text",
                  "text": "SonarQube Scan Failed",
                  "emoji": true
                }
              },
              {
                "type": "divider"
              },
              {
                "type": "section",
                "text": {
                  "type": "mrkdwn",
                  "text": "*Repository*\n<https://github.com/${{ github.repository }}|${{ github.repository }}>\n\n*${{ github.event_name == 'pull_request' && 'Pull Request' || 'Branch' }}*\n${{ github.event_name == 'pull_request' && format('<{0}|{1}>', github.event.pull_request.html_url, github.event.pull_request.title) || format('<https://github.com/{0}/commit/{1}|{2}>', github.repository, github.sha, steps.set-branch.outputs.branch)}}"
                },
                "accessory": {
                  "type": "image",
                  "image_url": "https://emoji.slack-edge.com/T02AJQYGN/sonar-fail/3d49949af6831e63.png",
                  "alt_text": "sonar fail icon"
                }
              },
              {
                "type": "divider"
              },
              {
                "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "*Commit*\n${{ steps.get-short-sha.outputs.short_sha }}"
                  }
              },
              {
                "type": "context",
                "elements": [
                  {
                    "type": "mrkdwn",
                    "text": "*Triggered By:* ${{ github.triggering_actor }}"
                  }
                ]
              }
            ]
          }
